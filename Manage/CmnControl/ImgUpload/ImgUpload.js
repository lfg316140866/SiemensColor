CmnMis_UI_Control_ImgUpload_Version = "2.1.3", function () { var a = CmnMis.UI.Control; a.ImgUpload = function (b, c) { function g(a, b, c, d, e) { var f, h, i, j, k, g = 0, l = function () { return ++g >= 2 ? !1 : (i = f.width, j = f.height, k = {}, "0" == d && (h = b / i > c / j ? b / i : c / j, k["width"] = i * h, k["height"] = j * h, k["margin-left"] = (b - i * h) / 2, k["margin-top"] = (c - j * h) / 2), e && e($("<img src='" + f.src + "' />").css(k)), void 0) }; Cmn.IsType(a, "image") ? f = a : (f = new Image, f.onload = l, f.src = a.indexOf(";base64") > 0 ? a : CmnMis.Func.RootPathToManageDir(a), f.complete && l()) } Cmn.Object.Inherit(this, a.BasControl, [b, c]); var d = this, e = !0, f = null; this.Type = "ImgUpload", this.IsExistHtmlTemp = !0, this.Val = "", this.DelImagePaths = [], this.SetCfgDescCfg({ SavePath: { Type: "Text", Desc: "上传保存的路径", Val: "/Upload" }, FileSize: { Type: "Text", Desc: "限制上传的文件大小", Val: "3" }, FileExt: { Type: "TextArea", Desc: "上传文件限制后缀", Val: "jpg,jpeg,png,gif,bmp" }, CutProgram: { Type: "RadioButton", Desc: "裁剪方案", Val: [{ key: "0", val: "自适应缩放裁剪" }, { key: "1", val: "宽度裁剪补白" }, { key: "2", val: "高度裁剪补白" }] }, IsSaveRealFileName: { Type: "RadioButton", Desc: "是否保存真实文件名称", Val: [{ key: "0", val: "否" }, { key: "1", val: "是" }] } }), this.ControlCfg = d.InitControlConfig(Cmn.Extend(d.ControlCfg, c)), d.OnClickDelBtn = new Cmn.Event(this), d.OnFilter = new Cmn.Event(this), d.OnComplete = new Cmn.Event(this), d.InitControl = function () { Cmn.UI && Cmn.UI.BasPlugin || CmnAjax.Func.LoadJs(Cmn.Func.GetRoot() + "Js/CmnUI/CmnUI.js"), Cmn.UI && Cmn.UI.Upload || CmnAjax.Func.LoadJs(Cmn.Func.GetRoot() + "Js/CmnUI/Upload/Upload.js"), d.ControlDom.find(".cg-Ctl-SelectFileBtn").css({ "line-height": d.ControlCfg.Height + "px" }), d.FileUpload = Cmn.UI.Upload(d.ControlDom.find(".cg-Ctl-SelectFileBtn")), d.FileUpload.LimitFileSuffix = d.ControlCfg.FileExt ? d.ControlCfg.FileExt : d.FileUpload.LimitFileSuffix, d.FileUpload.LimitSize = parseInt(d.ControlCfg.FileSize) || 3, d.ControlCfg.SavePath && (d.FileUpload.SaveRootPath = d.ControlCfg.SavePath), d.FileUpload.OnFilter.Add(function (a) { d.OnFilter.Trigger([a]), a.State && (f = !1, d.SetValue(a.Path), d.FileUpload.Upload(), d.ControlDom.find(".cg-Ctl-ProgressContainer").show()) }), d.FileUpload.OnProgress.Add(function (a) { d.ControlDom.find(".cg-Ctl-Progress").css({ width: a.Progress + "%" }) }), d.FileUpload.OnComplete.Add(function (a) { a.State ? d.SetValue(a.Path) : (d.SetValue(""), alert("上传失败，" + a.Msg)), f = !0, d.OnComplete.Trigger([a]) }), d.ControlDom.find(".cg-Ctl-DelImgItemBtn").click(function () { d.OnClickDelBtn.Trigger(), d.DelImagePaths.push(d.Val), d.SetValue(""), CmnMis.CurUserForm.AfterSave.Add(function () { var c, a = this.DelImagePaths.length, b = ""; if (window["InterfaceUrl"]) for (c = 0; a > c; c++) b = this.DelImagePaths.shift(), CmnAjax.PostData(window["InterfaceUrl"] + "?method=DelFile", { FilePath: b }, function (a) { a["IsSuccess"] && "1" == a.IsSuccess || Cmn.Log("文件删除失败！") }) }, "cmn-Ctl-ImgUploadDelImage", d) }) }, this.VerifyInput = function (b, c) { var d = this, e = "", g = Cmn.Func.GetNoHTMLFormatStr(d.GetValue()), h = !0, i = ""; if (0 == f) return c && c.call(d, $.extend(new Cmn.ErrMsg("正在上传中....请稍后保存!"), { control: d })), !1; if ("1" == d.ControlCfg.IsRequired && (e = /\S/, g || (g = ""), e.test($.trim(g)) || (i = d.ControlCfg.ColTitle + " : " + "为必填项！", h = !1)), e = d.ControlCfg.RegexContent, e && h) { if (!Cmn.IsType(e, "string")) return console.error(e.toString() + "正则表达式类型不对！"), !0; "/" == e[0] && (e = e.substr(1, e.length - 2)), e = new RegExp(e), g || (g = ""), e.test($.trim(g)) || (h = !1, i = d.ControlCfg.RegexErrorMsg) } return h ? (d.ControlDom.find(a.Selector.CtlVerifyRight).show(), d.ControlDom.find(a.Selector.CtlVerifyError).hide(), $(b).hide().html(""), !0) : (d.ControlDom.find(a.Selector.CtlVerifyError).show(), d.ControlDom.find(a.Selector.CtlVerifyRight).hide(), d.ControlDom.find(a.Selector.CtlErrTipDesc).html(i), d.ControlDom.find(a.Selector.CtlErrTipDesc).show(), d.ControlDom.find(a.Selector.CtlTipDesc).hide(), $(b).show().html(i), c && c.call(d, $.extend(new Cmn.ErrMsg(i), { control: d })), !1) }, this.Init = function () { this.SetValue("") }, this.SetValue = function (a) { d.Val = a, d.ControlDom.find(".cg-Ctl-ImgPreview").empty(), d.ControlDom.find(".cg-Ctl-DelImgItemBtn").hide(), d.ControlDom.find(".cg-Ctl-ProgressContainer").hide(), d.ControlDom.find(".cg-Ctl-Progress").css({ width: "0%" }), "" != a ? (g(a, d.ControlCfg.Width || d.ControlDom.find(".cg-Ctl-ImgPreview").width(), d.ControlCfg.Height || d.ControlDom.find(".cg-Ctl-ImgPreview").height(), d.ControlCfg.CutProgram, function (a) { d.ControlDom.find(".cg-Ctl-ImgPreview").empty().append(a) }), e && d.ControlDom.find(".cg-Ctl-DelImgItemBtn").show()) : d.Val = "" }, this.GetValue = function () { return this.Val }, this.SetEnabled = function (b) { e = b, e ? (d.ControlDom.find(a.Selector.CtlContent).find("input").attr("disabled", !1), d.ControlDom.find(".cg-Ctl-SelectFileBtn").show(), "" != d.Val && d.ControlDom.find(".cg-Ctl-DelImgItemBtn").show()) : (d.ControlDom.find(a.Selector.CtlContent).find("input").attr("disabled", !0), d.ControlDom.find(".cg-Ctl-DelImgItemBtn").hide(), d.ControlDom.find(".cg-Ctl-SelectFileBtn").hide()) } } }();
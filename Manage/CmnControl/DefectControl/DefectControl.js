function IsNum(a) { var b = window.event ? a.keyCode : a.which; b >= 48 && 57 >= b || 8 == b || 0 == b || (window.event ? window.event.returnValue = !1 : a.preventDefault()) } CmnMis_UI_Control_DefectControl_Version = "1.1", function () { var a = CmnMis.UI.Control; $(CmnMis.CurUserForm.GetUserFormSelector()), a.DefectControl = function (b, c) { var d, e, f; Cmn.Object.Inherit(this, a.BasControl, [b, c]), d = this, e = "Cmn_Control_DefectControl_" + Cmn.GetUUID(), d.Type = "DefectControl", d.IsSetValByKey = !0, d.SaveKeyField = "", d.ForeignKeyValue = "", _ProcessFileData = "", d.SetCfgDescCfg({ SaveTableName: { Type: "Text", Desc: "保存数据的表名" }, ForeignKeyFieldName: { Type: "Text", Desc: "外键名称" }, DataSourceTableName: { Type: "Text", Desc: "数据来源表名" }, ProcessFillSql: { Type: "SqlInput", Desc: "数据sql" } }), d.ControlCfg = d.InitControlConfig(Cmn.Extend(d.ControlCfg, c)), f = d.ControlCfg.Height, d.GetInitHtml = function () { return "<table class='cmn-ctl-Defaectthead' style='width:100%;max-height:100%;text-alinge:center;overflow:hidden;line-height:18px;border-bottom-width:0;' border='1' cellspacing='0' cellpadding='0'><thead class='cmn-ctl-thead'><tr></tr></thead></table><div class='cmn-ctl-DefaectContent' style='overflow-x:hidden;overflow-y:auto;text-align: center;height:" + (f - 30) + "px;'>" + "<table style='width:100%;max-height:100%;overflow:hidden;line-height:18px;text-align: center;' border='1' cellspacing='0' cellpadding='0'>" + "<tbody class='cmn-ctl-DefaectTbody' style='width:100%;height:100%;overflow-x:hidden;overflow-y:scroll'><tr id='" + e + "'>" + "</tr></tbody>" + "</table></div>" }, d.InitControl = function () { d.ControlDom.undelegate("input", "change").delegate("input", "change", function () { d.OnChange.Trigger([d.GetTotalQty()]) }), d.ControlDom.undelegate("input", "change").delegate("input", "change", function () { d.OnChange.Trigger([d.GetOperativesBadQty()]) }), d.ControlDom.undelegate("input", "change").delegate("input", "change", function () { d.OnChange.Trigger([d.GetCorpBadQty()]) }), d.ControlDom.undelegate("input", "keyup").delegate("input", "keyup", function () { $(this).change(), d.OnKeyup.Trigger() }) }, d.GetTotalQty = function () { var a = 0; return d.ControlDom.find("input").each(function () { a += 1 * $(this).val() || 0 }), a }, d.GetOperativesBadQty = function () { var a = 0; return d.ControlDom.find("input").each(function () { a += 1 * $(this).val() || 0 }), a }, d.GetCorpBadQty = function () { var a = 0; return d.ControlDom.find("input").each(function () { a += 1 * $(this).val() || 0 }), a }, d.Init = function () { var b, c, f, g, a = CmnMis.TableOpt.GetUserForm(d.ControlCfg["DataSourceTableName"]); a && d.ControlDom.find(".cmn-ctl-thead td").length < 1 ? (b = d.ControlDom.find(".cmn-ctl-thead tr").eq(0), c = d.ControlDom.find(".cmn-ctl-DefaectTbody tr").eq(0).clone(!0), f = "", g = "", b.empty(), c.empty(), d.ControlDom.find(".cmn-ctl-DefaectTbody").empty(), d.ControlDom.find(".cmn-ctl-DefaectTbody").append(c), $.each(a.ColInfo, function (a, b) { ("BugID" == b.ColName || "BugDesc" == b.ColName) && (g += "<td style='height: 20px; width:12%;text-alinge:center;text-align:center;color: #fff; background: #8583c7;border-color: #f5f5f5;'>" + b.ColTitle + "</td>", f += "<td fieldname='" + b.ColName + "' class='dat-" + b.ColName + "' style='width:12.2%;text-alinge:center;border-color: #f5f5f5;'></td>") }), g += "<td style='text-align: center;color: #fff; background: #8583c7;border-color: #f5f5f5;width:12%;'>数量</td><td style='text-align: center;color: #fff; background: #8583c7;border-color: #f5f5f5;width:12%;'>工序</td><td style='text-align: center;color: #fff; background: #8583c7;border-color: #f5f5f5;width:12%;'>操作工导致数量</td><td style='text-align: center;color: #fff; background: #8583c7;border-color: #f5f5f5;width:12%;'>操作工导致原因</td><td style='text-align: center;color: #fff; background: #8583c7;border-color: #f5f5f5;width:12%;'>供应商导致数量</td><td style='text-align: center;color: #fff; background: #8583c7;border-color: #f5f5f5;'>供应商导致原因</td>", f += "<td style='width: 12.3%;border-color: #f5f5f5;' fieldname='Qty'><input style='width:100%;height:100%;' class='dat-Qty{BugID}' type='text' vals='0' value='0' onkeypress='return IsNum(event)'></td><td style='width: 12%;border-color: #f5f5f5;' fieldname='Process'><select style='width:100%;height:100%;' class='jscProcessSel'></select></td><td style='width: 12.2%;border-color: #f5f5f5;' fieldname='OperativesBadQty'><input style='width:100%;height:100%;' class='dat-OperativesBadQty{BugID}' type='text' vals='0' value='0' onkeypress='return IsNum(event)'></td><td style='width: 12.2%;border-color: #f5f5f5;' fieldname='OperativesBadReason'><input style='width:100%;height:100%;' class='dat-OperativesBadReason{BugID}' type='text' vals='' value=''></td><td style='width: 12.3%;border-color: #f5f5f5;' fieldname='CorpBadQty'><input style='width:100%;height:100%;' class='dat-CorpBadQty{BugID}' type='text' vals='0' value='0' onkeypress='return IsNum(event)'></td><td style='border-color: #f5f5f5;' fieldname='CorpBadQtyReason'><input style='width:100%;height:100%;' class='dat-CorpBadQtyReason{BugID}' type='text' vals='' value=''></td>", b.append(g), c.append(f), CmnAjax.FillData("#" + e, InterfaceUrl, { CurUserFormID: a.UserFormID, method: "GetRecList" }, function (a) { "1" == a.IsSuccess && ($("input").focus(function () { $(this).val() == $(this).attr("vals") && $(this).val("") }), $("input").blur(function () { "" == $(this).val() && $(this).val($(this).attr("vals")) }), d.ControlDom.find(".cmn-Ctl-Content").css("border-radius", "0px"), d.ControlDom.find(".cmn-ctl-DefaectTbody tr:even").css("background-color", "#d7dff7"), d.ControlDom.find(".cmn-ctl-DefaectTbody tr:odd").css("background-color", "#fff"), d.ControlCfg.ProcessFillSql, "string" && "" != d.ControlCfg.ProcessFillSql && CmnAjax.PostData(InterfaceUrl + "?method=ExecSql", { ExecSql: d.ControlCfg.ProcessFillSql }, function (a) { if (1 == a.IsSuccess && a.data && a.data.length > 0) { var b = ""; $.each(a.data, function () { b += "<option>" + this["ProcessID"] + "</option>" }), d.ControlDom.find(".jscProcessSel").html(b) } d.SetValue(d.ControlCfg.Default || "") })) })) : d.ControlDom.find(".cmn-ctl-DefaectTbody tr").each(function () { $(this).find("td[fieldname=BugID]").val("0").attr("key", "") }) }, d.GetValue = function () { var a = []; return d.ControlDom.find(".cmn-ctl-DefaectTbody tr").each(function (b) { var e, c = {}; c["BugID"] = $(this).find("td[fieldname=BugID]").text(), c["Qty"] = $(this).find("td[fieldname=Qty] input").val(), c["Process"] = $(this).find("td[fieldname=Process] option").val(), c["OperativesBadQty"] = $(this).find("td[fieldname=OperativesBadQty] input").val(), c["OperativesBadReason"] = $(this).find("td[fieldname=OperativesBadReason] input").val(), c["CorpBadQty"] = $(this).find("td[fieldname=CorpBadQty] input").val(), c["CorpBadQtyReason"] = $(this).find("td[fieldname=CorpBadQtyReason] input").val(), c["PdcCompleteRoungBadID"] = "ID_" + b, c["BugID"] && 1 * c["Qty"] && (c[d.ControlCfg["ForeignKeyFieldName"]] = d.ForeignKeyValue, e = "", CmnMis.CurUserForm.CurViewState == CmnMis.CurUserForm.Cfg.ViewState.Add ? (c["PdcCompleteRoungBadID"] = $(this).find("td[fieldname=Qty] input").attr("key"), c["ProcessID"] = $(this).find("td[fieldname=Process] input").attr("key"), c["OperativesBadQty"] = $(this).find("td[fieldname=OperativesBadQty] input").attr("key"), c["OperativesBadReason"] = $(this).find("td[fieldname=OperativesBadReason] input").attr("key"), c["CorpBadQty"] = $(this).find("td[fieldname=CorpBadQty] input").attr("key"), c["CorpBadQtyReason"] = $(this).find("td[fieldname=CorpBadQtyReason] input").attr("key"), e = { CmnOpt: "Update" }) : e = { CmnOpt: "Add" }, a.push($.extend(c, e))) }), Cmn.Func.JsonToStr(a) }, d.SetValue = function (a) { var b, c; d.ForeignKeyValue = a, a && (b = CmnMis.TableOpt.GetUserForm(d.ControlCfg["SaveTableName"]), c = { CurUserFormID: b.UserFormID, method: "GetRecList" }, c["Condition"] = "[" + d.ControlCfg["ForeignKeyFieldName"] + "] = " + a, CmnAjax.PostData(InterfaceUrl, c, function (a) { a && a.data && a.data.length > 0 && $.each(a.data, function (a, b) { d.ControlDom.find(".dat-Qty" + b.BugID).val(1 * b.Qty), d.ControlDom.find(".dat-Process" + b.BugID).val(b.Qty), d.ControlDom.find(".dat-OperativesBadQty" + b.BugID).val(1 * b.Qty), d.ControlDom.find(".dat-OperativesBadReason" + b.BugID).val(b.Qty), d.ControlDom.find(".dat-CorpBadQty" + b.BugID).val(1 * b.Qty), d.ControlDom.find(".dat-CorpBadQtyReason" + b.BugID).val(b.Qty), d.ControlDom.find(".dat-Qty" + b.BugID).attr("key", b.PdcCompleteRoungBadID), d.ControlDom.find(".dat-Process" + b.BugID).attr("key", b.ProcessID), d.ControlDom.find(".dat-OperativesBadQty" + b.BugID).attr("key", b.OperativesBadQty), d.ControlDom.find(".dat-OperativesBadReason" + b.BugID).attr("key", b.OperativesBadReason), d.ControlDom.find(".dat-CorpBadQty" + b.BugID).attr("key", b.CorpBadQty), d.ControlDom.find(".dat-CorpBadQtyReason" + b.BugID).attr("key", b.CorpBadQtyReason) }) })) } } }();
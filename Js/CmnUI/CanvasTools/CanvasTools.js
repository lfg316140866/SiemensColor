Cmn_UI_CanvasTools_Version = "2.1"(function (a, b) { var e, c = function (a, b) { var c = this; c.Width = a || 300, c.Height = b || 150, c.Alpha = 1, c.Rotation = 0, c.RegX = 0, c.RegY = 0, c.ScaleX = 1, c.ScaleY = 1, c.X = 0, c.Y = 0, c.Canvas = document.createElement("canvas"), c.Ctx = c.Canvas.getContext("2d"), c.GetBase64Image = function (a, b) { var d, e; return arguments.length < 1 ? c.Canvas.toDataURL("image/png") : (d = document.createElement("canvas"), d.width = a, d.height = b, e = d.getContext("2d"), e.drawImage(c.Canvas, 0, 0, c.Width, c.Height, 0, 0, a, b), d.toDataURL("image/png")) }, c.CurClipFn = function () { }, c.SetCurClipFn = function (a) { c.CurClipFn = a || function () { } } }, d = function (a) { Cmn.Object.Inherit(this, c, []); var b = this; b.Image = a, b.Width = b.Image.width, b.Height = b.Image.height, b.GetBase64Image = function (a, c) { var d, e; return arguments.length < 1 ? b.Canvas.toDataURL("image/png") : (d = document.createElement("canvas"), d.width = a, d.height = c, e = d.getContext("2d"), e.drawImage(b.Image, 0, 0, b.Width, b.Height, 0, 0, a, c), d.toDataURL("image/png")) }, b.Draw = function () { b.Ctx.clearRect(0, 0, b.Width, b.Height), b.Ctx.save(), b.Ctx.translate(b.RegX + (b.X + b.Width / 2), b.RegY + (b.Y + b.Height / 2)), b.Ctx.rotate(b.Rotation * Math.PI / 180), b.Ctx.scale(b.ScaleX, b.ScaleY), b.Ctx.translate(b.RegX - (b.X + b.Width / 2), b.RegY - (b.Y + b.Height / 2)), b.Ctx.globalAlpha = b.Alpha, b.Ctx.drawImage(b.Image, b.X, b.Y, b.Image.width, b.Image.height), b.Ctx.restore() } }; CanvasRenderingContext2D.prototype.RoundRect = function (a, b, c, d, e) { var f = Math.min(c, d); return e > f / 2 && (e = f / 2), this.beginPath(), this.moveTo(a + e, b), this.arcTo(a + c, b, a + c, b + d, e), this.arcTo(a + c, b + d, a, b + d, e), this.arcTo(a, b + d, a, b, e), this.arcTo(a, b, a + c, b, e), this.closePath(), this }, e = function (e, f, g, h) { var i, j, k, l, m, n, o; Cmn.Object.Inherit(this, c, [f, g]), i = Cmn.Object.IsType($(e)[0], "HTMLCanvasElement") ? $(e)[0] : $(e).append(document.createElement("canvas")).find("canvas")[0], i.width = f, i.height = g, j = this, j.Canvas = i, j.Ctx = j.Canvas.getContext("2d"), j.CurActionChildIndex = null, j.ActionConfig = { MinScale: 0, MaxScale: 10, ScaleStep: .05 }, j.AutoRefresh = !!h, k = [], l = { x: 0, y: 0, scaleX: 1, scaleY: 1, rotation: 0 }, j.BeforSelectFile = new Cmn.Event(this), j.OnSelectFile = new Cmn.Event(this), j.OnError = new Cmn.Event(this), m = function () { var a, b; for (a = 0; a < k.length; a++) b = j[k[a]], b && (b.Canvas.width = b.Width, b.Canvas.height = b.Height, Cmn.IsType(b.CurClipFn, "function") && b.CurClipFn.call(b), b.Draw(), j.Ctx.drawImage(b.Canvas, 0, 0, b.Canvas.width, b.Canvas.height)) }, n = function (a, b, c) { var e = new d(a); return e.X = b || 0, e.Y = c || 0, e.Canvas.width = j.Width, e.Canvas.height = j.Height, e }, o = function () { j.Canvas.width = j.Width, j.Canvas.height = j.Height, j.Ctx.clearRect(0, 0, j.Width, j.Height), j.Ctx.save(), j.Ctx.translate(j.RegX + (j.X + j.Width / 2), j.RegY + (j.Y + j.Height / 2)), j.Ctx.rotate(j.Rotation * Math.PI / 180), j.Ctx.scale(j.ScaleX, j.ScaleY), j.Ctx.translate(j.RegX - (j.X + j.Width / 2), j.RegY - (j.Y + j.Height / 2)), Cmn.IsType(j.CurClipFn, "function") && j.CurClipFn.call(j), m(), j.Ctx.restore() }, j.Refresh = function () { j.AutoRefresh || o() }, j.SetCurClipFn = function (a) { j.CurClipFn = a || function () { }, j.Refresh() }, j.AddChild = function (a, b, c) { var d = k[k.length - 1] ? k[k.length - 1] + 1 : 0; j[d] = n(a, b, c), k.push(d), j.Refresh() }, j.AddChildAt = function (a, b, c, d) { var g, e = {}, f = a; for (g = 0; g < k.length; g++) k[g] >= a && (e[g] = j[k[g]]); for (g in e) f == k[g] && (k[g] = k[g] + 1), f = k[g], j[k[g]] = e[g]; j[a] = n(b, c, d), k.push(a), k.sort(function (a, b) { return a > b ? 1 : -1 }), j.Refresh() }, j.ReplaceChildByIndex = function (a, b, c, d) { j[a] || (k.push(a), k.sort(function (a, b) { return a > b ? 1 : -1 })), j[a] = n(b, c, d), j.Refresh() }, j.BindSelectFileBtn = function (c, d, e) { var f = j.CreateInputSelect(c); $("body").undelegate("#" + f.attr("id"), "change").delegate("#" + f.attr("id"), "change", function (c) { var h, f = c.target.files || (c.dataTransfer ? c.dataTransfer.files : c.target), g = f[0] || f; g && a["FileReader"] && g.type.indexOf("image") >= 0 ? (h = new FileReader, h.onload = function (a) { var h, i, c = a.target.result, f = /^data:base64,/; return f.test(c) && (h = { png: "image/png", jpg: "image/jpeg", jpeg: "image/jpeg", bmp: "image/bmp" }, c = c.replace(f, "data:" + h[_self.GetFileSuffix(g.name)] + ";base64,")), 0 == j.BeforSelectFile.Trigger([c]) ? !1 : (i = new Image, i.onload = function () { j.CompressPictures(i, function (a) { e === b && (e = !1), d == b ? (j.AddChild(a), j.CurActionChildIndex = k[k.length - 1]) : (e ? j.AddChildAt(d, a) : j.ReplaceChildByIndex(d, a), j.CurActionChildIndex = d); var c = j[j.CurActionChildIndex]; c.X = (j.Width - c.Width) / 2, c.Y = (j.Height - c.Height) / 2, j.Refresh(), j.OnSelectFile.Trigger([c]), l = { x: 0, y: 0, scaleX: 1, scaleY: 1, rotation: 0 } }) }, i.src = c, void 0) }, h.readAsDataURL(g)) : j.OnError.Trigger(["图片没上传！"]) }) }, j.EmptyStage = function () { for (var a = 0; a < k.length; a++) j[k[a]] = b; j.Ctx.clearRect(0, 0, j.Width, j.Height), j.Canvas.width = j.Width, j.Canvas.Height = j.height, k = [] }, $(j.Canvas).off("DOMMouseScroll mousewheel").on("DOMMouseScroll mousewheel", function (a) { var b, c; if (a.preventDefault(), a = a.originalEvent, null != j.CurActionChildIndex) { if (b = j[j.CurActionChildIndex], c = -1 * (a.wheelDelta ? a.wheelDelta / -120 : (a.detail || 0) / 3) * Math.abs(j.ActionConfig.ScaleStep), !(l.scaleX - j.ActionConfig.ScaleStep > j.ActionConfig.MinScale && l.scaleY - j.ActionConfig.ScaleStep > j.ActionConfig.MinScale && 0 > c || l.scaleX + j.ActionConfig.ScaleStep < j.ActionConfig.MaxScale && l.scaleY + j.ActionConfig.ScaleStep < j.ActionConfig.MaxScale && c > 0)) return !1; l.scaleX += c, l.scaleY += c, b.ScaleX = l.scaleX, b.ScaleY = l.scaleY, j.Refresh() } }), a.touch && (touch.on(j.Canvas, "touchstart", function (a) { a.preventDefault() }), touch.on(j.Canvas, "dragstart drag pinchstart pinch rotate", function (a) { var b, c; if (null != j.CurActionChildIndex) if (b = j[j.CurActionChildIndex], "dragstart" == a.type) l.x = b.X, l.y = b.Y, j.Refresh(); else if ("drag" == a.type) b.X = l.x + a.x, b.Y = l.y + a.y, j.Refresh(); else if ("pinchstart" == a.type) l.scaleX = b.ScaleX, l.scaleY = b.ScaleY, l.rotation = b.Rotation, j.Refresh(); else if ("rotate" == a.type) b.Rotation = l.rotation + a.rotation, j.Refresh(); else if ("pinch" == a.type) { if (c = a.scale - 1, !(l.scaleX - j.ActionConfig.ScaleStep > j.ActionConfig.MinScale && l.scaleY - j.ActionConfig.ScaleStep > j.ActionConfig.MinScale && 0 > c || l.scaleX + j.ActionConfig.ScaleStep < j.ActionConfig.MaxScale && l.scaleY + j.ActionConfig.ScaleStep < j.ActionConfig.MaxScale && c > 0)) return !1; b.ScaleX = l.scaleX + c, b.ScaleY = l.scaleY + c, j.Refresh() } })), j.AutoRefresh && Cmn.Animate.Timeline.Add(function () { k.length > 0 && j.AutoRefresh && o() }) }, e.prototype.CreateInputSelect = function (a) { var b = $('<input type="file">').css({ position: "absolute", top: "-1000px", width: "1px", height: "1px", opacity: "0", filter: "alpha(opacity=0)", left: "-1000px" }); return $("body").find(".cg-AllUploadFileInputContainer").length <= 0 && $("body").append($("<div class='cg-AllUploadFileInputContainer'>").css({ overflow: "hidden", width: "1px", top: "-1000px", left: "-1000px", height: "1px", position: "absolute", "z-index": "-10" })), $(".cg-AllUploadFileInputContainer").append(b), b.attr("id", "Cg_InputFile-" + (new Date).getTime() + "-" + Math.floor(1e3 * Math.random())), b.attr("name", "Cg_InputFileName-" + (new Date).getTime() + "-" + Math.floor(1e3 * Math.random())), $(a).find("label").length <= 0 && $(a).wrap('<label for="' + b.attr("id") + '"></label>'), b }, e.prototype.CompressPictures = function (a, b) { var c = this; EXIF.getData(a, function () { var d = a.width, e = a.height, f = c.Canvas.width / d, g = c.Canvas.height / e, h = Math.max(f, g), i = a.width * h, j = a.height * h, k = new Image, l = new MegaPixImage(a); navigator.userAgent.match(/iphone/i) ? l.render(k, { width: i, height: j, quality: 1, orientation: EXIF.getTag(this, "Orientation") }) : l.render(k, { width: i, height: j, quality: 1 }), k.onload = function () { b && b.call(this, k) } }) }, e.prototype.RoundRect = function (a, b, c, d, e) { return function () { this.Ctx.RoundRect(a, b, c, d, e), this.Ctx.clip() } }, e.prototype.IrregularShape = function (a, b, c) { return function () { if (Cmn.IsType(c, "array")) { this.Ctx.beginPath(), (c[0].x != c[c.length - 1].x || c[0].y != c[c.length - 1].y) && c.push({ x: c[0].x, y: c[0].y }), this.Ctx.moveTo(a, b); for (var d = 0; d < c.length; d++) this.Ctx.lineTo(c[d].x + a, c[d].y + b); this.Ctx.closePath(), this.Ctx.clip() } } }, Cmn.UI || (Cmn.UI = {}), Cmn.UI.CanvasTools || (Cmn.UI.CanvasTools = {}), Cmn.UI.CanvasTools.ImageProcess = function (a, b, c, d) { return new e(a, b, c, d) } })(window);